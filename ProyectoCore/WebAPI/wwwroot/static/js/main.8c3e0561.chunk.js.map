{"version":3,"sources":["theme/theme.js","componentes/Tool/Style.js","servicios/HttpCliente.js","actions/UsuarioAction.js","componentes/seguridad/RegistrarUsuario.js","contexto/store.js","componentes/seguridad/Login.js","actions/ImagenAction.js","componentes/seguridad/PerfilUsuario.js","componentes/Navegacion/bar/menuIzquierda.js","componentes/Navegacion/bar/menuDerecha.js","componentes/Navegacion/bar/BarSesion.js","componentes/Navegacion/AppNavbar.js","componentes/Navegacion/RutaSegura.js","actions/CursoAction.js","componentes/cursos/NuevoCurso.js","componentes/cursos/PaginadorCurso.js","componentes/Tool/ControlTyping.js","App.js","serviceWorker.js","contexto/initialState.js","contexto/reducers/sesionUsuarioReducer.js","contexto/reducers/openSnackbarReducer.js","index.js","contexto/reducers/index.js","logo.svg"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","style","paper","marginTop","display","flexDirection","alignItems","form","width","margin","submit","avatar","backgroundColor","height","icon","fontSize","axios","defaults","baseURL","interceptors","request","use","config","token_seguridad","window","localStorage","getItem","headers","Authorization","error","Promise","reject","requestGenerico","get","url","post","body","put","delete","instancia","create","CancelToken","isCancel","RegistrarUsuario","useState","NombreCompleto","Email","Password","ConfirmacionPassword","UserName","usuario","setUsuario","ingresarNombresMemoria","e","target","name","value","anterior","Container","component","maxWidth","justify","Typography","variant","Grid","container","spacing","item","xs","md","TextField","onChange","fullWidth","label","type","Button","onClick","preventDefault","resolve","eject","then","response","registrarUsuario","console","log","setItem","data","token","color","size","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","withRouter","props","dispatch","usuarioSesion","ingresarValoresMemoria","Avatar","imagenPerfil","fotoPerfil","nuevoFile","extension","sesion","autenticado","catch","loginUsuario","status","history","push","openMensaje","open","mensaje","obtenerDataImagen","imagen","nombre","split","pop","lector","FileReader","readAsDataURL","onload","result","onerror","PromiseRejectionEvent","PerfilUsuario","sesionUsuario","nombreCompleto","email","password","confirmarPassword","username","fotoUrl","useEffect","fotoKey","uuidv4","src","reactFoto","componet","mn","withIcon","key","singleImage","buttonText","imagenes","foto","URL","createObjectURL","respuesta","imgExtension","maxFileSize","HttpCliente","actualizarUsuario","Object","keys","errors","MenuIzquierda","classes","className","list","List","ListItem","Link","button","to","ListItemText","listItemText","Divider","MenuDerecha","salirSesion","FotoUsuarioTemp","useStyles","makeStyles","seccionDesktop","breakpoints","up","seccionMobile","grow","flexGrow","avatarSize","fontWeight","paddingLeft","abrirMenuIzquierdo","setAbrirMenuIzquierda","abrirMenuDerecha","setAbrirMenuDerecha","cerrarMenuIzquierda","cerrarMenuDerecha","salirSesionApp","removeItem","nuevoUsuario","Fragment","Drawer","onClose","anchor","onKeyDown","role","Toolbar","IconButton","AppNavbar","AppBar","position","RutaSegura","Component","rest","render","guardarCurso","curso","a","promesaCurso","promesaImagen","all","paginacionCurso","paginador","NuevoCurso","Date","fechaSeleccionada","setFechaSeleccionada","imagenCurso","setImagenCurso","titulo","descripcion","precio","promocion","setCurso","utils","DateFnsUtils","id","format","KeyboardButtonProps","cursoId","objetoCurso","parseFloat","fechaPublicacion","objetoImagen","objetoReferencia","respuestas","responseCurso","responseImagen","PaginadorCurso","textoBusquedaCurso","setTextoBusquedaCurso","typingBuscadorTexto","texto","delay","textoValor","setTextoValor","manejador","setTimeout","clearTimeout","ControlTyping","numeroPagina","cantidadElementos","paginadorRequest","setPaginadorRequest","listaRecords","totalRecords","numeroPaginas","paginadorResponse","setPaginadorResponse","tituloVariant","paginaVariant","objetoPaginadorRequest","obtenerListaCurso","padding","paddingTop","paddingBottom","sm","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","Hidden","mdDown","TableBody","map","Titulo","Descripcion","FechaPublicacion","toLocaleString","PrecioActual","Promocion","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","event","nuevaPagina","parseInt","onChangeRowsPerPage","labelRowsPerPage","App","openSnackbar","iniciaApp","setIniciaApp","obtenerUsuarioActual","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","exact","path","Login","Boolean","location","hostname","match","sesionUsuarioReducer","state","action","openSnackbarReducer","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8c3e0561.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#63a4fff\",\r\n      main: \"#1976d2\",\r\n      dark: \"#004ba0\",\r\n      contrastText: \"#ecfad8\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","const style = {\r\n  paper: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    margin: 20,\r\n  },\r\n  submit: {\r\n    marginTop: 15,\r\n  },\r\n  avatar: {\r\n    margin: 5,\r\n    backgroundColor: \"#1976d2\",\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  icon: {\r\n    fontSize: 40,\r\n  },\r\n};\r\n\r\nexport default style;\r\n","import axios from \"axios\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:59253/api\";\r\naxios.defaults.baseURL =\r\n  \"https://cursosonlineapplication.azurewebsites.net/api\";\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token_seguridad = window.localStorage.getItem(\"token_seguridad\");\r\n    if (token_seguridad) {\r\n      config.headers.Authorization = \"Bearer \" + token_seguridad;\r\n      return config;\r\n    }\r\n  },\r\n  (error) => {\r\n    return new Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst requestGenerico = {\r\n  get: (url) => axios.get(url),\r\n  post: (url, body) => axios.post(url, body),\r\n  put: (url, body) => axios.put(url, body),\r\n  delete: (url) => axios.delete(url),\r\n};\r\n\r\nexport default requestGenerico;\r\n","import HttpCliente from \"../servicios/HttpCliente\";\r\nimport axios from \"axios\";\r\n\r\n// Se crea instancia solo para login y para RegistrarUsuaario ya que no necesitan el Token de seguridad\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\nexport const registrarUsuario = (usuario) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.post(\"/usuario/registrar\", usuario).then((response) => {\r\n      resolve(response);\r\n    });\r\n  });\r\n};\r\n\r\nexport const obtenerUsuarioActual = (dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.get(\"/usuario\")\r\n      .then((response) => {\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const actualizarUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.put(\"/usuario\", usuario)\r\n      .then((response) => {\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\", // Refresca toda la data del usuario que esta en sesion\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const loginUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia\r\n      .post(\"/usuario/login\", usuario)\r\n      .then((response) => {\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:imagen/\" +\r\n            fotoPerfil.extension +\r\n            \";base64,\" +\r\n            fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport style from \"../Tool/Style\";\r\nimport { registrarUsuario } from \"../../actions/UsuarioAction\";\r\n\r\nconst RegistrarUsuario = () => {\r\n  const [usuario, setUsuario] = useState({\r\n    NombreCompleto: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmacionPassword: \"\",\r\n    UserName: \"\",\r\n  });\r\n\r\n  const ingresarNombresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const registrarUsuarioBoton = (e) => {\r\n    e.preventDefault();\r\n\r\n    registrarUsuario(usuario).then((response) => {\r\n      console.log(\"Se registro exitosamente el usuario\", response);\r\n      window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registro de Usuario\r\n        </Typography>\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"NombreCompleto\"\r\n                value={usuario.NombreCompleto}\r\n                onChange={ingresarNombresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese nombre y apellidos\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"Email\"\r\n                value={usuario.Email}\r\n                onChange={ingresarNombresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese su email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"UserName\"\r\n                value={usuario.UserName}\r\n                onChange={ingresarNombresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese su username\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"Password\"\r\n                value={usuario.Password}\r\n                onChange={ingresarNombresMemoria}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                fullWidth\r\n                label=\"Ingrese password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"ConfirmacionPassword\"\r\n                value={usuario.ConfirmacionPassword}\r\n                onChange={ingresarNombresMemoria}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                fullWidth\r\n                label=\"Confirme su password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={registrarUsuarioBoton}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={style.submit}\r\n              >\r\n                Enviar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegistrarUsuario;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\n// se define el provider\r\n// La unica forma de cambiar el valor global es con el reducer\r\n// initalState es el storage donde se guardan las variables globales\r\n// children son todos los componentes de reack hooks\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  // El provider es el que sibscribe todos los objetos que van a tener acceso a las variables globales\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider> // se subscribe todos los children\r\n);\r\n\r\n// se define un consumer\r\n// useContext te da acceso a todas las variables globales almacenadas en el contexto\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport {\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { loginUsuario } from \"../../actions/UsuarioAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nconst Login = (props) => {\r\n  const [{ usuarioSesion }, dispatch] = useStateValue();\r\n  const [usuario, setUsuario] = useState({\r\n    Email: \"\",\r\n    Password: \"\",\r\n  });\r\n\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const loginUsuarioBoton = (e) => {\r\n    e.preventDefault(); // no hace un refresh completo de la pagina\r\n\r\n    loginUsuario(usuario, dispatch).then((response) => {\r\n      if (response.status === 200) {\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n        props.history.push(\"/auth/perfil\");\r\n      } else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje: \"las credenciales del usuario son incorrectas\",\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <div style={style.paper}>\r\n        <Avatar style={style.avatar}>\r\n          <LockOutlinedIcon style={style.icon} />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login de Usuario\r\n        </Typography>\r\n        <form style={style.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            name=\"Email\"\r\n            value={usuario.Email}\r\n            onChange={ingresarValoresMemoria}\r\n            label=\"Ingrese Email\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            name=\"Password\"\r\n            value={usuario.Password}\r\n            onChange={ingresarValoresMemoria}\r\n            type=\"password\"\r\n            label=\"Ingrese password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={loginUsuarioBoton}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={style.submit}\r\n          >\r\n            Enviar\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","export const obtenerDataImagen = (imagen) => {\r\n  return new Promise((resolve, eject) => {\r\n    const nombre = imagen.name;\r\n    const extension = imagen.name.split(\".\").pop();\r\n\r\n    const lector = new FileReader(); // Lee la data que esta ingresando\r\n    lector.readAsDataURL(imagen);\r\n    lector.onload = () =>\r\n      resolve({\r\n        data: lector.result.split(\",\")[1],\r\n        nombre: nombre,\r\n        extension: extension,\r\n      }); // crea el base 64\r\n\r\n    lector.onerror = (error) => PromiseRejectionEvent(error);\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  obtenerUsuarioActual,\r\n  actualizarUsuario,\r\n} from \"../../actions/UsuarioAction\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport reactFoto from \"../../logo.svg\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { obtenerDataImagen } from \"../../actions/ImagenAction\";\r\n\r\nconst PerfilUsuario = () => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  const [usuario, setUsuario] = useState({\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmarPassword: \"\",\r\n    username: \"\",\r\n    imagenPerfil: null,\r\n    fotoUrl: \"\",\r\n  });\r\n\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUsuario(sesionUsuario.usuario);\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      fotoUrl: sesionUsuario.usuario.imagenPerfil,\r\n      imagenPerfil: null,\r\n    }));\r\n  }, []);\r\n\r\n  const guardarUsuario = (e) => {\r\n    e.preventDefault();\r\n    actualizarUsuario(usuario, dispatch).then((response) => {\r\n      if (response.status === 200) {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje:\r\n              \"Se guardaron exitosamente los cambios de Perfil de Usuario\",\r\n          },\r\n        });\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n      } else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje:\r\n              \"Errores al intentar guardar en: \" +\r\n              Object.keys(response.data.errors),\r\n          },\r\n        });\r\n      }\r\n      // console.log(\"se actualizo el usuario\", response);\r\n    });\r\n  };\r\n\r\n  // Selecciona una foto y la agrega al Avatar\r\n  // imagenes es un array de imagenes\r\n  const subirFoto = (imagenes) => {\r\n    const foto = imagenes[0];\r\n    const fotoUrl = URL.createObjectURL(foto);\r\n\r\n    obtenerDataImagen(foto).then((respuesta) => {\r\n      console.log(\"Respuesta\", respuesta);\r\n      setUsuario((anterior) => ({\r\n        ...anterior,\r\n        imagenPerfil: respuesta, // Archivo en formato file. Proviene del action obtener imagen\r\n        fotoUrl: fotoUrl, // Archivo en formato URL\r\n      }));\r\n    });\r\n  };\r\n  // Creamos una key\r\n  const fotoKey = uuidv4();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Avatar style={style.avatar} src={usuario.fotoUrl || reactFoto} />\r\n        <Typography componet=\"h1\" variant=\"h5\">\r\n          Perfil de Usuario\r\n        </Typography>\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"nombreCompleto\"\r\n                value={usuario.nombreCompleto}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese nombre y apellidos\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"username\"\r\n                value={usuario.username}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Username\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"email\"\r\n                value={usuario.email}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"password\"\r\n                value={usuario.password}\r\n                onChange={ingresarValoresMemoria}\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"confirmarPassword\"\r\n                value={usuario.confirmarPassword}\r\n                onChange={ingresarValoresMemoria}\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Confirme password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} mn={12}>\r\n              <ImageUploader\r\n                withIcon={false}\r\n                key={fotoKey}\r\n                singleImage={true}\r\n                buttonText=\"Seleccione una imagen de perfil\"\r\n                onChange={subirFoto}\r\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                maxFileSize={5242880}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={guardarUsuario}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                style={style.submit}\r\n              >\r\n                Guardar Datos\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PerfilUsuario;\r\n","import React from \"react\";\r\nimport { List, ListItem, ListItemText, Divider } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const MenuIzquierda = ({ classes }) => (\r\n  <div className={classes.list}>\r\n    <List>\r\n      <ListItem component={Link} button to=\"/auth/perfil\">\r\n        <i className=\"material-icons\">account_box</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.listItemText }}\r\n          primary=\"Perfil\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      <ListItem component={Link} button to=\"/curso/nuevo\">\r\n        <i className=\"material-icons\">add_box</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.listItemText }}\r\n          primary=\"Nuevo Curso\"\r\n        />\r\n      </ListItem>\r\n      <ListItem component={Link} button to=\"/curso/paginador\">\r\n        <i className=\"material-icons\">menu_book</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.listItemText }}\r\n          primary=\"Lista Cursos\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      <ListItem component={Link} button to=\"/instructor/nuevo\">\r\n        <i className=\"material-icons\">person_add</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.listItemText }}\r\n          primary=\"Nuevo Instructor\"\r\n        />\r\n      </ListItem>\r\n      <ListItem component={Link} button to=\"/instructor/lista\">\r\n        <i className=\"material-icons\">people</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.listItemText }}\r\n          primary=\"List Instructor\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { List, ListItem, ListItemText, Avatar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FotoUsuarioTemp from \"../../../logo.svg\";\r\n\r\nexport const MenuDerecha = ({ classes, usuario, salirSesion }) => (\r\n  <div className={classes.list}>\r\n    <List>\r\n      <ListItem button component={Link}>\r\n        <Avatar src={usuario.imagenPerfil || FotoUsuarioTemp} />\r\n        <ListItemText\r\n          classes={{ primary: classes.listItemText }}\r\n          primary={usuario ? usuario.nombreCompleto : \"\"}\r\n        />\r\n      </ListItem>\r\n      <ListItem button onClick={salirSesion}>\r\n        <ListItemText\r\n          classes={{ primary: classes.listItemText }}\r\n          primary=\"Salir\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Avatar,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport FotoUsuarioTemp from \"../../../logo.svg\";\r\nimport { useStateValue } from \"../../../contexto/store\";\r\nimport { MenuIzquierda } from \"./menuIzquierda\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MenuDerecha } from \"./menuDerecha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seccionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  seccionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1, // toma todo el espacio disponible\r\n  },\r\n  avatarSize: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  listItemText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n    paddingLeft: \"15px\",\r\n    color: \"#212121\",\r\n  },\r\n}));\r\n\r\nconst BarSesion = (props) => {\r\n  const classes = useStyles();\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [abrirMenuIzquierdo, setAbrirMenuIzquierda] = useState(false);\r\n  const [abrirMenuDerecha, setAbrirMenuDerecha] = useState(false);\r\n\r\n  const cerrarMenuIzquierda = () => {\r\n    setAbrirMenuIzquierda(false);\r\n  };\r\n\r\n  const abrirMenuIzquierdaAction = () => {\r\n    setAbrirMenuIzquierda(true);\r\n  };\r\n\r\n  const cerrarMenuDerecha = () => {\r\n    setAbrirMenuDerecha(false);\r\n  };\r\n\r\n  const salirSesionApp = () => {\r\n    localStorage.removeItem(\"token_seguridad\");\r\n    // props.history.push(\"/auth/login\");\r\n\r\n    dispatch({\r\n      type: \"SALIR_SESION\",\r\n      nuevoUsuario: null,\r\n      autenticado: false,\r\n    });\r\n\r\n    props.history.push(\"/auth/login\");\r\n  };\r\n\r\n  const abrirMenuDerechaAction = () => {\r\n    setAbrirMenuDerecha(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        open={abrirMenuIzquierdo}\r\n        onClose={cerrarMenuIzquierda}\r\n        anchor=\"left\"\r\n      >\r\n        <div\r\n          className={classes.list}\r\n          onKeyDown={cerrarMenuIzquierda}\r\n          onClick={cerrarMenuIzquierda}\r\n        >\r\n          <MenuIzquierda classes={classes} />\r\n        </div>\r\n      </Drawer>\r\n      <Drawer\r\n        open={abrirMenuDerecha}\r\n        onClose={cerrarMenuDerecha}\r\n        anchor=\"right\"\r\n      >\r\n        <div\r\n          role=\"button\"\r\n          onClick={cerrarMenuDerecha}\r\n          onKeyDown={cerrarMenuDerecha}\r\n        >\r\n          <MenuDerecha\r\n            classes={classes}\r\n            salirSesion={salirSesionApp}\r\n            usuario={sesionUsuario ? sesionUsuario.usuario : null}\r\n          />\r\n        </div>\r\n      </Drawer>\r\n      <Toolbar>\r\n        <IconButton color=\"inherit\" onClick={abrirMenuIzquierdaAction}>\r\n          <i className=\"material-icons\">menu</i>\r\n        </IconButton>\r\n        <Typography variant=\"h6\">Cursos Online</Typography>\r\n        <div className={classes.grow}></div>\r\n        <div className={classes.seccionDesktop}>\r\n          <Button color=\"inherit\" onClick={salirSesionApp}>\r\n            Salir\r\n          </Button>\r\n          <Button color=\"inherit\">\r\n            {sesionUsuario ? sesionUsuario.usuario.nombreCompleto : \"\"}\r\n          </Button>\r\n          <Avatar\r\n            src={sesionUsuario.usuario.imagenPerfil || FotoUsuarioTemp}\r\n          ></Avatar>\r\n        </div>\r\n        <div className={classes.seccionMobile}>\r\n          <IconButton color=\"inherit\" onClick={abrirMenuDerechaAction}>\r\n            <i className=\"material-icons\">more_vert</i>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n// Las propiedades de navegacion dentro de barsesion puedan trabajarse\r\nexport default withRouter(BarSesion);\r\n","import React from \"react\";\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport BarSesion from \"./bar/BarSesion\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nconst AppNavbar = () => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  return sesionUsuario ? (\r\n    sesionUsuario.autenticado == true ? (\r\n      <AppBar position=\"static\">\r\n        <BarSesion />\r\n      </AppBar>\r\n    ) : null\r\n  ) : null;\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction RutaSegura({ component: Component, ...rest }) {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(\r\n        props // Se renderiza bajo una condicion\r\n      ) =>\r\n        sesionUsuario ? (\r\n          sesionUsuario.autenticado == true ? (\r\n            <Component {...props} {...rest} />\r\n          ) : (\r\n            <Redirect to=\"/auth/login\" />\r\n          )\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default RutaSegura;\r\n","import HttpCliente from \"../servicios/HttpCliente\";\r\n\r\nexport const guardarCurso = async (curso, imagen) => {\r\n  const endPointCurso = \"/cursos\";\r\n  const promesaCurso = HttpCliente.post(endPointCurso, curso);\r\n\r\n  if (imagen) {\r\n    const endPointImagen = \"/documento\";\r\n    const promesaImagen = HttpCliente.post(endPointImagen, imagen);\r\n    return await Promise.all([promesaCurso, promesaImagen]);\r\n  } else {\r\n    return await Promise.all([promesaCurso]);\r\n  }\r\n};\r\n\r\nexport const paginacionCurso = (paginador) => {\r\n  return new Promise((resolve, reject) => {\r\n    HttpCliente.post(\"/cursos/report\", paginador).then((response) => {\r\n      resolve(response);\r\n    });\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport style from \"../Tool/Style\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\"; // Layout de fechas\r\nimport DateFnsUtils from \"@date-io/date-fns\"; // Da soporte a las fechas\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { obtenerDataImagen } from \"../../actions/ImagenAction\";\r\nimport { guardarCurso } from \"../../actions/CursoAction\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nconst NuevoCurso = () => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\r\n  const [imagenCurso, setImagenCurso] = useState(null);\r\n  const [curso, setCurso] = useState({\r\n    titulo: \"\",\r\n    descripcion: \"\",\r\n    precio: 0.0,\r\n    promocion: 0.0,\r\n  });\r\n\r\n  const resetearForm = () => {\r\n    setFechaSeleccionada(new Date());\r\n    setImagenCurso(null);\r\n    setCurso({\r\n      titulo: \"\",\r\n      descripcion: \"\",\r\n      precio: 0.0,\r\n      promocion: 0.0,\r\n    });\r\n  };\r\n\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target; // Obtiene los valores de la caja de texo (name y value)\r\n    setCurso((anterior) => ({\r\n      // Funcion para setear Curso\r\n      ...anterior, // Mantiene el valor anterior de curso\r\n      [name]: value, // Setea el valor de la caja de texto\r\n    }));\r\n  };\r\n\r\n  const subirFoto = (imagenes) => {\r\n    const foto = imagenes[0];\r\n    obtenerDataImagen(foto).then((respuesta) => {\r\n      setImagenCurso(respuesta);\r\n    });\r\n  };\r\n\r\n  const guardarCursoBoton = (e) => {\r\n    e.preventDefault();\r\n\r\n    const cursoId = uuidv4();\r\n\r\n    const objetoCurso = {\r\n      titulo: curso.titulo,\r\n      descripcion: curso.descripcion,\r\n      promocion: parseFloat(curso.promocion || 0.0),\r\n      precio: parseFloat(curso.precio || 0.0),\r\n      fechaPublicacion: fechaSeleccionada,\r\n      cursoId: cursoId,\r\n    };\r\n\r\n    let objetoImagen = null;\r\n    if (imagenCurso) {\r\n      objetoImagen = {\r\n        nombre: imagenCurso.nombre,\r\n        data: imagenCurso.data,\r\n        extension: imagenCurso.extension,\r\n        objetoReferencia: cursoId,\r\n      };\r\n    }\r\n\r\n    guardarCurso(objetoCurso, objetoImagen).then((respuestas) => {\r\n      const responseCurso = respuestas[0];\r\n      const responseImagen = respuestas[1];\r\n      let mensaje = \"\";\r\n\r\n      if (responseCurso.status === 200) {\r\n        mensaje += \"Se guardo exitosamente el curso\";\r\n        resetearForm();\r\n      } else {\r\n        mensaje += \"Errores: \" + Object.keys(responseCurso.data.errors);\r\n      }\r\n\r\n      if (responseImagen) {\r\n        if (responseImagen.status === 200) {\r\n          mensaje += \", se guardo la imagen correctamente\";\r\n        } else {\r\n          mensaje +=\r\n            \"Errores en Imagen: \" + Object.keys(responseImagen.data.errors);\r\n        }\r\n      }\r\n\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const fotoKey = uuidv4();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registro de Nuevo Curso\r\n        </Typography>\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"titulo\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Titulo\"\r\n                value={curso.titulo}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"descripcion\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Descripcion\"\r\n                value={curso.descripcion}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"precio\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Precio Normal\"\r\n                value={curso.precio}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"promocion\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Precio Promocion\"\r\n                value={curso.promocion}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  value={fechaSeleccionada}\r\n                  onChange={setFechaSeleccionada}\r\n                  margin=\"normal\"\r\n                  id=\"fecha-publicacion-id\"\r\n                  label=\"Seleccione Fecha de Publicacion\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  fullWidth\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <ImageUploader\r\n                withIcon={false}\r\n                key={fotoKey}\r\n                singleImage={true}\r\n                buttonText=\"Seleccion image del curso\"\r\n                onChange={subirFoto}\r\n                imgExtension={[\".jpg\", \".gif\", \"png\", \".jpeg\"]}\r\n                maxFileSize={5242880}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={style.submit}\r\n                onClick={guardarCursoBoton}\r\n              >\r\n                Guardar Curso\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NuevoCurso;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { paginacionCurso } from \"../../actions/CursoAction\";\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableBody,\r\n  Table,\r\n  TableCell,\r\n  TableRow,\r\n  TablePagination,\r\n  Hidden,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ControlTyping from \"../Tool/ControlTyping\";\r\n\r\nconst PaginadorCurso = () => {\r\n  const [textoBusquedaCurso, setTextoBusquedaCurso] = useState(\"\");\r\n  const typingBuscadorTexto = ControlTyping(textoBusquedaCurso, 900);\r\n\r\n  const [paginadorRequest, setPaginadorRequest] = useState({\r\n    titulo: \"\",\r\n    numeroPagina: 0,\r\n    cantidadElementos: 5,\r\n  });\r\n\r\n  const [paginadorResponse, setPaginadorResponse] = useState({\r\n    listaRecords: [],\r\n    totalRecords: 0,\r\n    numeroPaginas: 0,\r\n  });\r\n  // De acuerdo a la cantidad de veces que cambia el paginadorRequest seran las veces que se cargara el useEffect\r\n  useEffect(() => {\r\n    const obtenerListaCurso = async () => {\r\n      let tituloVariant = \"\";\r\n      let paginaVariant = paginadorRequest.numeroPagina + 1;\r\n\r\n      if (typingBuscadorTexto) {\r\n        tituloVariant = typingBuscadorTexto;\r\n        paginaVariant = 1;\r\n      }\r\n\r\n      const objetoPaginadorRequest = {\r\n        titulo: tituloVariant,\r\n        numeroPagina: paginaVariant,\r\n        cantidadElementos: paginadorRequest.cantidadElementos,\r\n      };\r\n      const response = await paginacionCurso(objetoPaginadorRequest);\r\n      setPaginadorResponse(response.data);\r\n    };\r\n\r\n    obtenerListaCurso();\r\n  }, [paginadorRequest, typingBuscadorTexto]);\r\n\r\n  const cambiarPagina = (event, nuevaPagina) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      numeroPagina: parseInt(nuevaPagina),\r\n    }));\r\n  };\r\n\r\n  const cambiarCantidadRecords = (event) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      cantidadElementos: parseInt(event.target.value),\r\n      numeroPagina: 0,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", width: \"100%\" }}>\r\n      <Grid container style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\r\n        <Grid item xs={12} sm={12} md={6}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"textoBusquedaCurso\"\r\n            variant=\"outlined\"\r\n            label=\"Busca tu curso\"\r\n            onChange={(e) => setTextoBusquedaCurso(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Cursos</TableCell>\r\n              <Hidden mdDown>\r\n                <TableCell align=\"left\">Descripcion</TableCell>\r\n                <TableCell align=\"left\">Fecha Publicacion</TableCell>\r\n                <TableCell align=\"left\">Precio Original</TableCell>\r\n                <TableCell align=\"left\">Precio Promocion</TableCell>\r\n              </Hidden>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginadorResponse.listaRecords.map((curso) => (\r\n              <TableRow key={curso.Titulo}>\r\n                <TableCell align=\"left\">{curso.Titulo}</TableCell>\r\n                <Hidden mdDown>\r\n                  <TableCell align=\"left\">{curso.Descripcion}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {new Date(curso.FechaPublicacion).toLocaleString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{curso.PrecioActual}</TableCell>\r\n                  <TableCell align=\"left\">{curso.Promocion}</TableCell>\r\n                </Hidden>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        rowsPerPageOptions={[2, 10, 25]}\r\n        count={paginadorResponse.totalRecords}\r\n        rowsPerPage={paginadorRequest.cantidadElementos}\r\n        page={paginadorRequest.numeroPagina}\r\n        onChangePage={cambiarPagina} // Flecha del paginador\r\n        onChangeRowsPerPage={cambiarCantidadRecords}\r\n        labelRowsPerPage=\"Cursos por pagina\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginadorCurso;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function ControlTyping(texto, delay) {\r\n  const [textoValor, setTextoValor] = useState();\r\n\r\n  // esta funcion me va a permitir manejar el tiempo de la caja de texto en que esta escribiendo el usuario\r\n  useEffect(() => {\r\n    const manejador = setTimeout(() => {\r\n      setTextoValor(texto);\r\n    }, delay); // Si deja de escribir toma el valor que hay en la caja de texto\r\n\r\n    return () => {\r\n      clearTimeout(manejador);\r\n    };\r\n  }, [texto]);\r\n\r\n  return textoValor;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/theme\";\nimport RegistrarUsuario from \"./componentes/seguridad/RegistrarUsuario\";\nimport Login from \"./componentes/seguridad/Login\";\nimport Perfil from \"./componentes/seguridad/PerfilUsuario\";\nimport PerfilUsuario from \"./componentes/seguridad/PerfilUsuario\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Grid, Snackbar } from \"@material-ui/core\";\nimport AppNavbar from \"./componentes/Navegacion/AppNavbar\";\nimport { useStateValue } from \"./contexto/store\";\nimport { obtenerUsuarioActual } from \"./actions/UsuarioAction\";\nimport RutaSegura from \"./componentes/Navegacion/RutaSegura\";\nimport NuevoCurso from \"./componentes/cursos/NuevoCurso\";\nimport PaginadorCurso from \"./componentes/cursos/PaginadorCurso\";\n\nfunction App() {\n  // obtengo la referencia de la variable global de usuario\n  // dispatch es una representacion del contexto\n  const [{ sesionUsuario, openSnackbar }, dispatch] = useStateValue();\n\n  const [iniciaApp, setIniciaApp] = useState(false);\n  useEffect(() => {\n    if (!iniciaApp) {\n      obtenerUsuarioActual(dispatch)\n        .then((response) => {\n          setIniciaApp(true);\n        })\n        .catch((error) => {\n          setIniciaApp(true);\n        });\n    }\n  }, [iniciaApp]);\n  // iniciaApp bandera para detectar que sesion de usuario se inicio correctamente\n  return iniciaApp === false ? null : (\n    <React.Fragment>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={openSnackbar ? openSnackbar.open : false}\n        autoHideDuration={3000}\n        ContentProps={{ \"area-describedby\": \"message-id\" }}\n        message={\n          <span id=\"message-id\">\n            {openSnackbar ? openSnackbar.mensaje : \"\"}\n          </span>\n        }\n        onClose={() =>\n          dispatch({\n            type: \"OPEN_SNACKBAR\",\n            openMensaje: {\n              open: false,\n              mensaje: \"\",\n            },\n          })\n        }\n      ></Snackbar>\n\n      <Router>\n        <MuithemeProvider theme={theme}>\n          <AppNavbar />\n          <Grid container>\n            <Switch>\n              <Route exact path=\"/auth/login\" component={Login} />\n              <Route\n                exact\n                path=\"/auth/registrar\"\n                component={RegistrarUsuario}\n              />\n\n              <RutaSegura exact path=\"/auth/perfil\" component={PerfilUsuario} />\n              <RutaSegura exact path=\"/\" component={PerfilUsuario} />\n              <RutaSegura exact path=\"/curso/nuevo\" component={NuevoCurso} />\n\n              <RutaSegura\n                exact\n                path=\"/curso/paginador\"\n                component={PaginadorCurso}\n              />\n            </Switch>\n          </Grid>\n        </MuithemeProvider>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {};\r\n","// este reducer se a encargar de almacenar las variables del usuario\r\n// Los reducer consta de 3 partes\r\n// 1 define los valores que se van a almacenar\r\n// 2 logica\r\n// 3 exportar la funcion\r\nexport const initialState = {\r\n  usuario: {\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    foto: \"\",\r\n  },\r\n  autenticado: false,\r\n};\r\n\r\n// la data que se va a modificar\r\n// action determina que va hacer con la data de arriba\r\n\r\nconst sesionUsuarioReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INICIAR_SESION\":\r\n      return {\r\n        ...state,\r\n        usuario: action.sesion,\r\n        autenticado: action.autenticado,\r\n      };\r\n    case \"SALIR_SESION\":\r\n      return {\r\n        ...state,\r\n        usuario: action.nuevoUsuario,\r\n        autenticado: action.autenticado,\r\n      };\r\n    case \"ACTUALIZAR_USUARIO\":\r\n      return {\r\n        ...state,\r\n        usuario: action.nuevoUsuario,\r\n        autenticado: action.autenticado,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sesionUsuarioReducer;\r\n","const initialState = {\r\n  open: false,\r\n  mensaje: \"\",\r\n};\r\n\r\nconst openSnackbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_SNACKBAR\":\r\n      return {\r\n        ...state,\r\n        open: action.openMensaje.open,\r\n        mensaje: action.openMensaje.mensaje,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default openSnackbarReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { initialState } from \"./contexto/initialState\";\nimport { StateProvider } from \"./contexto/store\";\nimport { mainReducer } from \"./contexto/reducers\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={mainReducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import sesionUsuarioReducer from \"./sesionUsuarioReducer\";\r\nimport openSnackbarReducer from \"./openSnackbarReducer\";\r\n\r\nexport const mainReducer = ({ sesionUsuario, openSnackbar }, action) => {\r\n  return {\r\n    sesionUsuario: sesionUsuarioReducer(sesionUsuario, action),\r\n    openSnackbar: openSnackbarReducer(openSnackbar, action),\r\n  };\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}